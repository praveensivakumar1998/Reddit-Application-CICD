pipeline {
    agent any
    tools {
        nodejs 'node16'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/praveensivakumar1998/Reddit-Application-CICD.git'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''
                        $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Reddit-App \
                        -Dsonar.projectKey=Reddit-App
                    '''
                }
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar'
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }
        stage('Dependency-Check') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DC'
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "praveensivakumar/reddit-app:${BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            steps {
                script {
                    sh 'docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Trivy Image Scan') {
            steps {
                sh "trivy image praveensivakumar/reddit-app:${BUILD_NUMBER}"
            }
        }
        stage('Update Deployment File') {
            steps {
                script {
                    // Clone the target repository
                    git credentialsId: 'github-credentials-id', branch: 'main', url: 'https://github.com/praveensivakumar1998/reddit-app-k8s-manifests.git'
                    
                    // Update the image tag in the YAML file
                    def manifestFile = readFile 'Kubernetes/deployment.yml'
                    def updatedManifest = manifestFile.replaceAll(/image: praveensivakumar\/reddit-app:.*/, "image: praveensivakumar/reddit-app:${BUILD_NUMBER}")
                    writeFile file: 'Kubernetes/deployment.yml', text: updatedManifest
                    
                    // Commit and push the changes
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "praveen.siva002@gmail.com"
                            git config user.name "praveensivakumar1998"
                            
                            echo "Staging deployment.yml"
                            git add Kubernetes/deployment.yml
                            
                            echo "Committing changes"
                            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                            
                            echo "Pushing changes to GitHub"
                            git push https://${GITHUB_TOKEN}@github.com/praveensivakumar1998/reddit-app-k8s-manifests.git HEAD:main
                        '''
                    }
                }
            }
        }
    }
    post {
        always {
            dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
        }
    }
}
